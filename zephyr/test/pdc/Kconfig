# Copyright 2024 The ChromiumOS Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

config TEST_SUITE_PDC_GENERIC
	bool "Enable generic PDC tests"

config TEST_SUITE_PDC_UTILS
	bool "Enable PDC utility tests"

config TEST_SUITE_PDC_API_NULL_CHECK
	bool "Enable PDC API null-protection checks"

config TEST_SUITE_PDC_DEVICE_NOT_READY
	bool "Enable PDC subsystem tests for device-not-ready"

config TEST_SUITE_PDC_POLICY
	bool "Enable PDC policy tests"

config TEST_SUITE_PDC_POLICY_CLAMPED
	bool "Enable PDC policy tests with clamped power"

config TEST_SUITE_PDC_POLICY_VARIABLE
	bool "Enable PDC policy tests to verify variabled PDOs"

config TEST_SUITE_PDC_PMC_USB_MUX
	bool "Enable PDC PMC USB mux tests"

config TEST_SUITE_PDC_RTS54XX
	bool "Enable RTS54xx PDC tests"

config TEST_SUITE_PDC_TPS6699X
	bool "Enable TPS6699x PDC tests"

config TODO_B_345292002
	bool "Disable tests that fail for TPS6699x PDC config"
	help
	  Enable this config for pdc.generic.tps6699x to disable tests that
	  currently fail. As b/345292002 progresses, the amount of code
	  protected by this config should go down.

config TEST_SUITE_PDC_RETIMER_FW_UPDATE
	bool "Enable retimer FW update tests"

config TEST_SUITE_PDC_CONSOLE
	bool "Enable pdc console command tests"

config TEST_SUITE_PDC_HOSTCMD
	bool "Enable PDC host command tests"

config TEST_SUITE_UCSI_HOSTCMD
	bool "Enable UCSI host command tests"

config TEST_SUITE_PPM
	bool "Enable UCSI PPM tests"
	help
	  Enable tests for the PPM of the UCSI. This suite tests our PPM from
	  the perspective of the UCSI spec. All layers use the actual code
	  (ppm_common, ppm_driver, pdc_driver) and mocking is discouraged.
	  Inputs to the tests are controlled through a PDC emulator.

config TEST_SUITE_PPM_CONSOLE
	bool "Enable tests for the `ppm` console command"
	help
	  Run a test suite covering the `ppm` console command, which sends
	  various UCSI commands from the EC console for testing and debugging
	  purposes.

config TEST_SUITE_PPM_DRIVER
	bool "Enable PPM driver tests"
	help
	  Enable tests for the lower layer (ppm_driver) of the PPM. This suite
	  exercises the behaviors specific to the implementation. Mocking the
	  upper layer (ppm_common) and lower layer (pdc driver) is used to cover
	  corner cases.

config TEST_SUITE_PDC_UCSI
	bool "Enable UCSI tests"

config TEST_SUITE_PPM_STATE_MACHINE
	bool "Enable PPM state machine tests"
	help
	  Enable tests for the state machine (ppm_common) of the PPM.

config TEST_SUITE_PDC_SBU_MUX_NO_CCD
	bool "Enable SBU mux mode tests w/o CCD support"
	help
	  Test getting/setting the SBU mux mode without a CCD port configured.
	  This should cause `pdc_power_mgmt_set_sbu_mux_mode()` and
	  `pdc_power_mgmt_get_sbu_mux_mode()` to fail.

config TEST_PDC_MESSAGE_TRACING
	bool "Enable PDC message tracing"
	help
	  Capture PDC messages between the EC and the PDC chip. These
	  can be standard UCSI messages or vendor specific messages such
	  as those defined for the rts54xx chip. Message data is
	  reported in the test run logs and in a separate "rts.pcap"
	  file in PCAP capture file format.

config TEST_SUITE_PDC_TRACE_MSG
	bool "Enable PDC message tracing tests"
	depends on !TEST_PDC_MESSAGE_TRACING
	help
	  No help.

	  These tests are incompatible with TEST_PDC_MESSAGE_TRACING
	  since that config enables an alternate implementation of the
	  code to be tested here.

config TEST_DISABLE_INLINE_CHIPSET_IN_STATE
	bool "Disable chipset_in_state inline method"
	help
	  This is used to not define chipset_in_state method as inline
	  function.

config TEST_SUITE_PDC_RUNTIME_PORT_CONFIG
	bool "Enable PDC runtime port config tests"
	help
	  Run tests for the runtime USB-C port configuration feature

config TEST_SKIP_EC_APP_MAIN
	bool "Skip running ec_app_main()"
	help
	  Some tests intentionally create errors, like incorrect
	  initialization order, and verify the error handling paths.
	  The ec_app_main() is broken in these cases.

choice TEST_PDC_RUNTIME_CONFIG_SCENARIO
	prompt "Select a PDC topology to set up at runtime"
	depends on TEST_SUITE_PDC_RUNTIME_PORT_CONFIG

config TEST_PDC_RUNTIME_CONFIG_SCENARIO_NO_PDCS
	bool "Cause an error while reading board PDC config"
	help
	  Return an error from `board_get_pdc_for_port()`, causing no PDCs to be
	  initialized.

config TEST_PDC_RUNTIME_CONFIG_SCENARIO_ONE_PDC
	bool "Enable C0 but not C1"
	help
	  Activate one of two ports from `board_get_pdc_for_port()`

config TEST_PDC_RUNTIME_CONFIG_SCENARIO_DISCONT
	bool "Disable C0 but enable C1"
	help
	  Activate only the second port from `board_get_pdc_for_port()`

config TEST_PDC_RUNTIME_CONFIG_SCENARIO_TWO_PDCS
	bool "Enable C0 and enable C1"
	help
	  Activate both ports from `board_get_pdc_for_port()`

endchoice

source "Kconfig.zephyr"
