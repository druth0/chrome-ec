/* Copyright 2025 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

#include <dt-bindings/pwm/pwm.h>
#include <it8xxx2_emul.dts>

/ {
	named-adc-channels {
		compatible = "named-adc-channels";

		adc_vbus: vbus {
			enum-name = "ADC_VBUS";
			io-channels = <&adc0 4>;
		};
	};

	zephyr,user {
		io-channels = <&adc0 15>;
		io-channel-names = "PPVAR_PWR_IN_IMON";
	};

	named-gpios {
		compatible = "named-gpios";

		gpio_ec_entering_rw: ec_entering_rw {
			gpios = <&gpioc 7 GPIO_OUTPUT>;
			enum-name = "GPIO_ENTERING_RW";
		};
		gpio_usb_c0_fault_l: usb_c0_fault_l {
			gpios = <&gpiok 0 GPIO_INPUT_PULL_UP>;
		};
		gpio_bj_adp_present: bj_adp_present {
			gpios = <&gpioa 7 GPIO_INPUT>;
		};
		gpio_en_ppvar_bj_adp_od: en_ppvar_bj_adp_od {
			gpios = <&gpioe 3 GPIO_OUTPUT>;
		};
	};

	gpio-interrupts {
		compatible = "cros-ec,gpio-interrupts";

		int_usb_c0: usb_c0 {
			irq-pin = <&gpio_usb_c0_fault_l>;
			flags = <GPIO_INT_EDGE_FALLING>;
			handler = "syv682x_interrupt";
		};
		int_bj_adp_present: bj_adp_present {
			irq-pin = <&gpio_bj_adp_present>;
			flags = <GPIO_INT_EDGE_BOTH>;
			handler = "adp_connect_interrupt";
		};
	};

	named-i2c-ports {
		compatible = "named-i2c-ports";

		i2c_ec_i2c_usb_c0: ec_i2c_usb_c0 {
			i2c-port = <&i2c2>;
			enum-names = "I2C_PORT_USB_C0";
		};
	};

	usbc {
		#address-cells = <1>;
		#size-cells = <0>;
		port0@0 {
			compatible = "named-usbc-port";
			reg = <0>;
			tcpc = <&tcpci_emul_0>;
			usb-mux-chain-0 {
				compatible = "cros-ec,usb-mux-chain";
				usb-muxes = <&virtual_mux_0>;
			};
		};
		port0-muxes {
			virtual_mux_0: virtual-mux-0 {
				compatible = "cros-ec,usbc-mux-virtual";
			};
		};
	};

	led-pwms {
		#address-cells = <1>;
		#size-cells = <1>;

		pwm1: pwm@1 {
			compatible = "cros,pwm-mock";
			reg = <1 1>;
			#pwm-cells = <3>;
		};
		pwm2: pwm@2 {
			compatible = "cros,pwm-mock";
			reg = <2 1>;
			#pwm-cells = <3>;
		};
	};

	pwmleds {
		compatible = "pwm-leds";
		pwm_pwr_red_led: pwm_pwr_red_led {
			pwms = <&pwm1 1 PWM_HZ(2000) PWM_POLARITY_INVERTED>;
		};
		pwm_pwr_white_led: pwm_pwr_white_led {
			pwms = <&pwm2 2 PWM_HZ(2000) PWM_POLARITY_INVERTED>;
		};
	};

	cros-pwmleds {
		compatible = "cros-ec,pwm-leds";

		leds = <&pwm_pwr_red_led>;
		leds = <&pwm_pwr_white_led>;
	};

	pwm-led-pins {
		compatible = "cros-ec,pwm-led-pins";

		power_led: power-led {
			led-id = "EC_LED_ID_POWER_LED";
			led-pwms = <&pwm_pwr_red_led &pwm_pwr_white_led>;

			color-battery-off {
				led-color = "LED_OFF";
				led-values = <0 0>;
			};

			color-battery-amber {
				led-color = "LED_AMBER";
				led-values = <100 0>;
			};

			color-battery-white {
				led-color = "LED_WHITE";
				led-values = <0 100>;
			};
		};
	};
};

&i2c4 {
	tcpci_emul_0: tcpci_emul@82 {
		compatible = "cros,tcpci-generic-emul";
		status = "okay";
		reg = <0x82>;
	};
};
