/* Copyright 2025 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

#include <cros/cbi_flash.dtsi>
#include "../ite_generated.dtsi"
#include "../interrupts.dtsi"
#include "../ite_common.dtsi"
#include "../ite_keyboard.dtsi"
#include "../ite_overlay.dtsi"
#include "../ite_usbc.dtsi"
#include "../power_signal.dtsi"
#include "led_pins.dtsi"
#include "led_policy.dtsi"
#include "motionsense.dtsi"
#include "temp_sensor.dtsi"
#include "thermistor.dtsi"

/ {
	aliases {
		gpio-kbd-kso2 = &gpio_ec_kso_02_inv;
	};
	named-adc-channels {
		/delete-node/ charger_pmon_q;
		/delete-node/ temp_sensor1;
		/delete-node/ charger_amon_q;

		adc_type_c: charger_type_c {
			enum-name = "ADC_TEMP_SENSOR_2";
			io-channels = <&adc0 3>;
		};
		adc_charger: adc_charger {
			enum-name = "ADC_TEMP_SENSOR_1";
			io-channels = <&adc0 4>;
		};
		adc_usbc_sub_detect: usbc_sub_detect {
			enum-name = "ADC_EVB_CH_2";
			io-channels = <&adc0 0>;
		};
		adc-base-det {
			enum-name = "ADC_BASE_DET";
			io-channels = <&adc0 5>;
		};
	};

	batteries {
		default_battery: dynapack_b140435 {
			compatible = "dynapack,b140435","battery-smart";
		};
		celxpert_b340442 {
			compatible = "celxpert,b340442","battery-smart";
		};
	};

	gpio-interrupts {
		/delete-node/ lid-accel;
		int_imu: ec-imu {
			irq-pin = <&gpio_imu_int_ec_l>;
			flags = <GPIO_INT_EDGE_FALLING>;
			handler = "bmi3xx_interrupt";
		};
		pogo_prsnt_int: pogo-prsnt-int {
			irq-pin = <&pogo_prsnt_int_l>;
			flags = <GPIO_INT_EDGE_BOTH>;
			handler = "base_detect_interrupt";
		};
	};

	named-gpios {
		/delete-node/ ec_i2c_pdc0_s_int_odl;
		/delete-node/ ec_i2c_pdc1_s_int_odl;
		/delete-node/ usb_c0_dp_hpd;
		/delete-node/ usb_c1_dp_hpd;
		/delete-node/ en_usb_c0_dev_mode;
		/delete-node/ en_pp5000_z1;
		/delete-node/ lid_accel_int_ec_l;
		/delete-node/ dp_aux_path_sel;
		/delete-node/ en_pp5000_usba_vbus;

		// POGO_PRSNT_INT_L  GPI5
		pogo_prsnt_int_l: pogo_prsnt_int_l{
			gpios = <&gpioi 5 GPIO_INPUT>;
		};

		gpio_ap_ec_revd0: gpio_ap_ec_revd0{
			gpios = <&gpioi 6 GPIO_INPUT>;
		};

		gpio_ap_ec_revd1: gpio_ap_ec_revd1{
			gpios = <&gpioi 7 GPIO_INPUT>;
		};

		gpio_ec_en_ppvar_blpwr: ec_en_ppvar_blpwr {
			gpios = <&gpioh 3 (GPIO_OUTPUT | GPIO_OUTPUT_INIT_LOW)>;
		};
		gpio_5p0va_pwr_mode: 5p0va_pwr_mode {
			gpios = <&gpiod 7 (GPIO_OUTPUT | GPIO_OUTPUT_INIT_LOW)>;
		};
		gpio_pen_eject: pen_eject {
			gpios = <&gpioh 2 GPIO_INPUT>;
		};

		// EN_PP3300_BASE_X  GPF4
		en_pp3300_base_x: en_pp3300_base_x{
			gpios = <&gpiof 4 GPIO_OUTPUT_LOW>;
		};

		//PEN_EJECT_OD_L GPD1
		gpio_pen_eject_od_l: gpio_pen_eject_od_l {
			gpios = <&gpiod 1 (GPIO_INPUT)>;
		};

		//CCD_MODE_L GPE5
		gpio_ccd_mode_odl: ccd_mode_odl {
			gpios = <&gpioe 5 (GPIO_INPUT)>;
		};
	};

	named-i2c-ports {
		/delete-node/ ec_i2c_pdc_s_scl_3v3;
	};

	unused-pins {
		compatible = "unused-gpios";
		unused-gpios =
			<&gpioa 3 GPIO_INPUT_PULL_DOWN>,
			//<&gpioa 6 GPIO_INPUT_PULL_DOWN>,
			<&gpioa 7 GPIO_INPUT_PULL_DOWN>,
			<&gpiob 6 GPIO_INPUT_PULL_DOWN>,
			<&gpiob 7 GPIO_INPUT_PULL_DOWN>,
			<&gpiod 4 GPIO_INPUT_PULL_DOWN>,
			<&gpioe 0 GPIO_INPUT_PULL_DOWN>,
			<&gpioe 7 GPIO_INPUT_PULL_DOWN>,
			<&gpiof 2 GPIO_INPUT_PULL_DOWN>,
			<&gpiog 0 GPIO_INPUT_PULL_DOWN>,
			<&gpiog 1 GPIO_INPUT_PULL_DOWN>,
			<&gpioh 1 GPIO_INPUT_PULL_DOWN>,
			<&gpioi 2 GPIO_INPUT_PULL_DOWN>,
			<&gpioj 2 GPIO_INPUT_PULL_DOWN>;
	};

	usbc {
		#address-cells = <1>;
		#size-cells = <0>;

		/delete-node/ port1@1;
		/delete-node/ port1-muxes;
		usbc_port0: port0@0 {
			compatible = "named-usbc-port";
			reg = <0>;
			chg = <&charger_rt9490>;
			pdc = <&pdc_power_p0>;
			policy = <&cros_policy>;
		};

		ppm-driver {
			compatible = "ucsi-ppm";
		};
	};
};

&adc0{
	pinctrl-0 = <&adc0_ch5_gpi5_default>;
};

&pwm2 {
	status = "disabled";
};

&pwm3 {
	prescaler-cx = <PWM_PRESCALER_C4>;
};

&i2c0 {
	/delete-node/ bq25720@9;
	charger_rt9490: rt9490@53{
		compatible = "richtek,rt9490";
		thermistor = <&thermistor_rt9490>;
		reg = <0x53>;
		eoc-current = <120>;
		/delete-property/ irq;
	};
	data-hold-time = <10>;
};

&i2c2 {
	/delete-node/ rts54-pdc@67;
};

&i2c4 {
	/delete-node/ ps8747-mux-1@10;
	/delete-node/ tusb546-mux-0@44;
};

&sha0 {
	status = "okay";
};

/*
 * When CBI in flash is enabled, setup RO flash layout as follows:
 *   RO binary:    0x00000:0x5DFFF
 *   FMAP:         0x5DC00:0x5DFFF
 *   CBI flash:    0x5E000:0x5EFFF
 *   PSTATE block: 0x5F000:0x5FFFF
 */
&binman {
	wp-ro {
		/*
		 * Delete the pstate node so that we can force it to be the
		 * last sub-section. binman doesn't handle sub-sections with
		 * out of order offsets.
		 */
		 /delete-node/ pstate;

		 ec-ro {
			fmap {
				offset =  <(0x60000 - (0x1000 * 2) - 0x400)>;
				/*
				* don't specify 'size = <0x400>' here so
				* it is auto-assigned to the fmap size.
				*/
			};
		};
		cbi {
			offset = <(0x60000 - (0x1000 * 2))>;
			size = <0x1000>;
		};
		pstate {
			type = "section";
			offset = <(0x60000 - (0x1000 * 1))>;
			size = <0x1000>;
		};
	};
};
