/* Copyright 2025 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

#include <cros/cbi_flash.dtsi>
#include "../ite_generated.dtsi"
#include "../interrupts.dtsi"
#include "../ite_common.dtsi"
#include "../ite_keyboard.dtsi"
#include "../ite_overlay.dtsi"
#include "../ite_usbc.dtsi"
#include "../power_signal.dtsi"
#include "../usba.dtsi"
#include "led_pins.dtsi"
#include "led_policy.dtsi"
#include "temp_sensor.dtsi"
#include "cbi.dtsi"

/ {
	batteries {
		default_battery: dynapack_b140435 {
			compatible = "dynapack,b140435","battery-smart";
		};
		celxpert_b340442 {
			compatible = "celxpert,b340442","battery-smart";
		};
	};

	gpio-interrupts {
		/delete-node/ lid-accel;
		/delete-node/ ec-imu;
		/delete-node/ tablet_mode;
		/delete-node/ volume-up;
		/delete-node/ volume-down;
		int_jd1: jd1 {
			irq-pin = <&gpio_jd1>;
			flags = <GPIO_INT_EDGE_BOTH>;
			handler = "audio_jack_interrupt";
		};
	};

	named-gpios {
		/delete-node/ ec_i2c_pdc0_s_int_odl;
		/delete-node/ ec_i2c_pdc1_s_int_odl;
		/delete-node/ usb_c0_dp_hpd;
		/delete-node/ usb_c1_dp_hpd;
		/delete-node/ en_usb_c0_dev_mode;
		/delete-node/ ec_kso_02_inv;
		/delete-node/ imu_int_ec_l;
		/delete-node/ lid_accel_int_ec_l;
		/delete-node/ lid_360_l;
		/delete-node/ ec_voldn_btn_odl;
		/delete-node/ ec_volup_btn_odl;

		gpio_ec_en_ppvar_blpwr: ec_en_ppvar_blpwr {
			gpios = <&gpioi 1 (GPIO_OUTPUT | GPIO_OUTPUT_INIT_LOW)>;
		};
		gpio_jd1: jd1 {
			gpios = <&gpiof 0 (GPIO_INPUT | GPIO_VOLTAGE_1P8)>;
		};
		gpio_5p0va_pwr_mode: 5p0va_pwr_mode {
			gpios = <&gpiod 7 (GPIO_OUTPUT | GPIO_OUTPUT_INIT_LOW)>;
		};
		gpio_pen_eject: pen_eject {
			gpios = <&gpiof 4 (GPIO_INPUT | GPIO_PULL_UP)>;
		};
	};

	named-i2c-ports {
		/delete-node/ ec_i2c_pdc_s_scl_3v3;
	};

	unused-pins {
		compatible = "unused-gpios";
		unused-gpios =
			<&gpioa 3 GPIO_INPUT_PULL_DOWN>,
			<&gpioa 7 GPIO_INPUT_PULL_DOWN>,
			<&gpiob 6 GPIO_INPUT_PULL_DOWN>,
			<&gpiob 7 GPIO_INPUT_PULL_DOWN>,
			<&gpioc 7 GPIO_INPUT_PULL_DOWN>,
			<&gpiod 0 GPIO_INPUT_PULL_DOWN>,
			<&gpiod 1 GPIO_INPUT_PULL_DOWN>,
			<&gpiod 4 GPIO_INPUT_PULL_DOWN>,
			<&gpioe 0 GPIO_INPUT_PULL_DOWN>,
			<&gpioe 3 GPIO_INPUT_PULL_DOWN>,
			<&gpioe 4 GPIO_INPUT_PULL_DOWN>,
			<&gpioe 7 GPIO_INPUT_PULL_DOWN>,
			<&gpiof 1 GPIO_INPUT_PULL_DOWN>,
			<&gpiof 2 GPIO_INPUT_PULL_DOWN>,
			<&gpioh 1 GPIO_INPUT_PULL_DOWN>,
			<&gpioh 2 GPIO_INPUT_PULL_DOWN>,
			<&gpioi 5 GPIO_INPUT_PULL_DOWN>,
			<&gpioj 2 GPIO_INPUT_PULL_DOWN>;
	};

	cros-keyscan {
		compatible = "cros-ec,keyscan";

		actual-key-mask = <
			0x48	/* C0 */
			0xff	/* C1 */
			0xff	/* C2 */
			0xff	/* C3 */
			0xff	/* C4 */
			0xff	/* C5 */
			0xff	/* C6 */
			0xa4	/* C7 */
			0xff	/* C8 */
			0xff	/* C9 */
			0x55	/* C10 */
			0xff	/* C11 */
			0xff	/* C12 */
			0x40    /* C13 */
			0x0a    /* C14 */
		>;
	};

	kblight {
		compatible = "cros-ec,kblight-pwm";
		pwms = <&pwm3 0 PWM_HZ(100) PWM_POLARITY_NORMAL>;
	};
};

&cros_kb_raw {
	pinctrl-0 = <&ksi0_default
		     &ksi1_default
		     &ksi2_default
		     &ksi3_default
		     &ksi4_default
		     &ksi5_default
		     &ksi6_default
		     &ksi7_default
		     &kso0_default
		     &kso1_default
		     &kso2_default
		     &kso3_default
		     &kso4_default
		     &kso5_default
		     &kso6_default
		     &kso7_default
		     &kso8_default
		     &kso9_default
		     &kso10_default
		     &kso11_default
		     &kso12_default
		     &kso13_default
		     &kso14_default>;
};

&pwm2 {
	status = "disabled";
};

&pwm3 {
	prescaler-cx = <PWM_PRESCALER_C4>;
};

&i2c0 {
	data-hold-time = <10>;
};

&i2c4 {
	/delete-node/ ps8747-mux-1@10;
	/delete-node/ tusb546-mux-0@44;

	status = "disabled";
};

&sha0 {
	status = "okay";
};

&pdc_power_p0 {
	zephyr,deferred-init;
};
&pdc_power_p1 {
	zephyr,deferred-init;
};

/*
 * When CBI in flash is enabled, setup RO flash layout as follows:
 *   RO binary:    0x00000:0x5DFFF
 *   FMAP:         0x5DC00:0x5DFFF
 *   CBI flash:    0x5E000:0x5EFFF
 *   PSTATE block: 0x5F000:0x5FFFF
 */
&binman {
	wp-ro {
		/*
		 * Delete the pstate node so that we can force it to be the
		 * last sub-section. binman doesn't handle sub-sections with
		 * out of order offsets.
		 */
		 /delete-node/ pstate;

		 ec-ro {
			fmap {
				offset =  <(0x60000 - (0x1000 * 2) - 0x400)>;
				/*
				* don't specify 'size = <0x400>' here so
				* it is auto-assigned to the fmap size.
				*/
			};
		};
		cbi {
			offset = <(0x60000 - (0x1000 * 2))>;
			size = <0x1000>;
		};
		pstate {
			type = "section";
			offset = <(0x60000 - (0x1000 * 1))>;
			size = <0x1000>;
		};
	};
};
