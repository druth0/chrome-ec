/* Copyright 2025 The ChromiumOS Authors
 * Use of this source code is governed by a BSD-style license that can be
 * found in the LICENSE file.
 */

#include <cros/thermistor/thermistor.dtsi>
#include <dt-bindings/usb_pd_tcpm.h>

/ {
	aliases {
		gpio-cbi-wp = &gpio_ec_cbi_wp;
		gpio-wp = &gpio_ec_wp_odl;
		int-wp = &int_wp_l;
		/*
		 * USB-A: VBUS enable output
		 * LTE: power enable output
		 */
		gpio-en-usb-a1-vbus = &gpio_sb_2;
		/*
		 * HDMI: power enable output, HDMI enable output,
		 * and HPD input
		 */
		gpio-en-rails-odl = &gpio_sb_1;
		gpio-hdmi-en-odl = &gpio_sb_4;
		gpio-hpd-odl = &gpio_sb_3;
		/*
		 * Enable S5 rails for LTE sub-board
		 */
		gpio-en-sub-s5-rails = &gpio_sb_2;
	};


	ec-console {
		compatible = "ec-console";
		disabled = "events", "lpc", "hostcmd";
	};

	hibernate-wake-pins {
		compatible = "cros-ec,hibernate-wake-pins";
		wakeup-irqs = <
			&int_power_button
		>;
	};

	gpio-interrupts {
		compatible = "cros-ec,gpio-interrupts";

		int_power_button: power_button {
			irq-pin = <&gpio_gsc_ec_pwr_btn_odl>;
			flags = <GPIO_INT_EDGE_BOTH>;
			handler = "power_button_interrupt";
		};
		int_wp_l: wp_l {
			irq-pin = <&gpio_ec_wp_odl>;
			flags = <GPIO_INT_EDGE_BOTH>;
			handler = "switch_interrupt";
		};
		int_usb_c0: usb_c0 {
			irq-pin = <&gpio_usb_c0_fault_l>;
			flags = <GPIO_INT_EDGE_FALLING>;
			handler = "syv682x_interrupt";
		};
	};

	unused-pins {
		compatible = "unused-gpios";
		unused-gpios = <&gpioc 3 0>,
			       <&gpiod 4 0>,
			       <&gpiod 7 0>,
			       <&gpioh 2 0>,
			       <&gpioj 7 0>,
			       <&gpiol 4 0>;
	};

	named-gpios {
		gpio_sb_1: sb_1 {
			gpios = <&gpioe 6 0>;
			no-auto-init;
		};
		gpio_sb_2: sb_2 {
			gpios = <&gpiof 0 0>;
			no-auto-init;
		};

		gpio_sb_3: sb_3 {
			gpios = <&gpioe 7 0>;
			no-auto-init;
		};
		gpio_sb_4: sb_4 {
			gpios = <&gpioe 0 0>;
			no-auto-init;
		};
	};

	temp_memory: memory {
		compatible = "cros-ec,temp-sensor-thermistor";
		thermistor = <&thermistor_3V3_51K1_47K_4050B>;
		adc = <&adc_temp_sensor_1>;
	};
	temp_charger: charger {
		compatible = "cros-ec,temp-sensor-thermistor";
		thermistor = <&thermistor_3V3_51K1_47K_4050B>;
		adc = <&adc_temp_sensor_2>;
	};
	temp_ambient: ambient {
		compatible = "cros-ec,temp-sensor-thermistor";
		thermistor = <&thermistor_3V3_51K1_47K_4050B>;
		adc = <&adc_temp_sensor_3>;
	};

	named-temp-sensors {
		compatible = "cros-ec,temp-sensors";
		memory {
			temp_fan_off = <35>;
			temp_fan_max = <60>;
			temp_host_high = <85>;
			temp_host_halt = <90>;
			temp_host_release_high = <80>;
			power-good-pin = <&gpio_ec_soc_dsw_pwrok>;
			sensor = <&temp_memory>;
		};
		charger {
			temp_fan_off = <35>;
			temp_fan_max = <60>;
			temp_host_high = <85>;
			temp_host_halt = <90>;
			temp_host_release_high = <80>;
			power-good-pin = <&gpio_ec_soc_dsw_pwrok>;
			sensor = <&temp_charger>;
		};
		ambient {
			temp_fan_off = <35>;
			temp_fan_max = <60>;
			temp_host_high = <85>;
			temp_host_halt = <90>;
			temp_host_release_high = <80>;
			power-good-pin = <&gpio_ec_soc_dsw_pwrok>;
			sensor = <&temp_ambient>;
		};
	};

	usba {
		compatible = "cros-ec,usba-port-enable-pins";
		/*
		 * sb_2 is only configured as GPIO when USB-A1 is present,
		 * but it's still safe to control when disabled.
		 *
		 * ILIM_SEL pins are referred to by legacy enum name,
		 * GPIO_USB*_ILIM_SEL. The one for port A1 is unused on
		 * sub-boards that don't have USB-A so is safe to control
		 * regardless of system configuration.
		 */
		enable-pins = <&gpio_en_usb_a0_vbus &gpio_sb_2>;
		status = "okay";
	};

	usbc {
		#address-cells = <1>;
		#size-cells = <0>;

		port0@0 {
			compatible = "named-usbc-port";
			reg = <0>;
			tcpc = <&usbpd0>;
			ppc = <&ppc_port0>;
			usb-mux-chain-0 {
				compatible = "cros-ec,usb-mux-chain";
				usb-muxes = <&virtual_mux_0>;
			};
		};
		port0-muxes {
			virtual_mux_0: virtual-mux-0 {
				compatible = "cros-ec,usbc-mux-virtual";
			};
		};
	};
};

&gpio_vccin_aux_vid0 {
	gpios = <&gpiod 0 (GPIO_INPUT | GPIO_VOLTAGE_1P8)>;
};
&gpio_vccin_aux_vid1 {
	gpios = <&gpiok 1 (GPIO_INPUT | GPIO_VOLTAGE_1P8)>;
};

&gpio_ec_prochot_odl {
	gpios = <&gpioi 1 (GPIO_ODR_HIGH | GPIO_VOLTAGE_1P8)>;
};

&thermistor_3V3_51K1_47K_4050B {
	status = "okay";
};

&adc_ec_vsense_pp3300_s5 {
	/*
	 * Voltage divider on input has 47k upper and 220k lower legs with 3 V
	 * full-scale reading on the ADC. Apply the largest possible multiplier
	 * (without overflowing int32) to get the best possible approximation
	 * of the actual ratio, but derate by a factor of two to ensure
	 * unexpectedly high values won't overflow.
	 */
	mul = <(715828 / 2)>;
	div = <(589820 / 2)>;
};

&adc0 {
	pinctrl-0 = <&adc0_ch0_gpi0_default
		     &adc0_ch2_gpi2_default
		     &adc0_ch3_gpi3_default
		     &adc0_ch13_gpl0_default
		     &adc0_ch14_gpl1_default>;
	pinctrl-names = "default";
};

&pinctrl {
	i2c4_clk_gpe0_sleep: i2c4_clk_gpe0_sleep {
		pinmuxs = <&pinctrle 0 IT8XXX2_ALT_DEFAULT>;
	};
	i2c4_data_gpe7_sleep: i2c4_data_gpe7_sleep {
		pinmuxs = <&pinctrle 7 IT8XXX2_ALT_DEFAULT>;
	};
	i2c2_clk_gpf6_default: i2c2_clk_gpf6_default {
		gpio-voltage = "1v8";
	};
	i2c2_data_gpf7_default: i2c2_data_gpf7_default {
		gpio-voltage = "1v8";
	};
};

&i2c0 {
	label = "I2C_EEPROM";
	clock-frequency = <I2C_BITRATE_FAST>;

	cbi_eeprom: eeprom@50 {
		compatible = "atmel,at24";
		reg = <0x50>;
		size = <2048>;
		pagesize = <16>;
		address-width = <8>;
		timeout = <5>;
	};
	pinctrl-0 = <&i2c0_clk_gpb3_default
		     &i2c0_data_gpb4_default>;
	pinctrl-names = "default";
};

&i2c5 {
	label = "I2C_USB_C0_TCPC";
	clock-frequency = <I2C_BITRATE_FAST_PLUS>;
	pinctrl-0 = <&i2c5_clk_gpa4_default
		     &i2c5_data_gpa5_default>;
	pinctrl-names = "default";

	ppc_port0: ppc_syv@40 {
		compatible = "silergy,syv682x";
		reg = <0x40>;
		frs_en_gpio = <&gpio_ec_usb_c0_frs_en>;
		irq-gpios = <&gpiok 0 GPIO_ACTIVE_LOW>;
	};
};

&usbpd0 {
	status = "okay";
};
